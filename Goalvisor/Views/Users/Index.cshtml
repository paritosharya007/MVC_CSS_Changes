@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<div>
    <div class="float-left">
        <h1>Manage Users</h1>
    </div>
    <div class="float-right">
        <button class="btn btn-solid-regs" onclick="addOrUpdate('')">Add New</button>
    </div>
    <div class="clearfix" style="width:100%"></div>
</div>
<div>
    <table id="rolesDT" class="table table-bordered table-hover" style="width:100%">
        <thead>
            <tr>
                <td style="width:30%">Username</td>
                <td style="width:30%">Email</td>
                <td style="width:30%">Referred By</td>
                <td style="width:10%">Actions</td>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

@section Scripts{
    <script>
        let table = {};
        $(document).ready(function () {
            table = $('#rolesDT').DataTable({
                "searchable": true,
                "bDestroy": true,
                "ordering": true,
                "serverSide": true,
                responsive: true,
                processing: true,
                sortable: true,
                ajax: {
                    "url": "/Users/PageData",
                    "type": "POST"
                },
                columns: [
                    {
                        name: 'Username',
                        data: 'fullName',
                        title: "Username",
                        sortable: true,
                    },
                    {
                        name: 'Email',
                        data: 'email',
                        title: "Email",
                        sortable: true,
                    },
                    {
                        name: 'Referred By',
                        data: 'referredBy',
                        title: "Referred By",
                        sortable: true,
                    },
                    {
                        name: 'Action',
                        data: null,
                        targets: -1,
                        sortable: false,
                        title: 'Action',
                        searchable: false,
                        "render": function (data, type, full, meta) {
                            return generateActionButtons(full);
                        }
                    }
                ]
            });
        });

        function add(userId) {
            var modalSelector = GetLoaderModal(80);
            $(modalSelector).modal();

            $(modalSelector + "-content").load("/Users/Add/" + userId,
                function (response, status, xhr) {
                }
            );
        }

        function assignRoles(userId) {
            var modalSelector = GetLoaderModal(80);
            $(modalSelector).modal();

            $(modalSelector + "-content").load("/Users/AssignRoles/" + userId,
                function (response, status, xhr) {
                }
            );
        }

        function addSubscription(userId) {
            var modalSelector = GetLoaderModal(80);
            $(modalSelector).modal();

            $(modalSelector + "-content").load("/Users/AddSubscription/" + userId,
                function (response, status, xhr) {
                }
            );
        }

        function addOrUpdate(userId) {
            var modalSelector = GetLoaderModal(80);
            $(modalSelector).modal();

            $(modalSelector + "-content").load("/Users/AddOrUpdate/" + userId,
                function (response, status, xhr) {
                }
            );
        }

        function remove(subscriptionId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Removing a user is permanent.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: "/Users/Remove/" + subscriptionId,
                        method: "POST",
                    }).done(function (data) {
                        if (data.success) {
                            notifySucess(data.message)
                            table.draw();
                        } else {
                            notifyError(data.message);
                        }
                    });
                }
            });
        }

        function revoke(userId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This would disable API access for this user.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, revoke!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: "/Users/Revoke/" + userId,
                        method: "POST",
                    }).done(function (data) {
                        if (data == true) {
                            notifySucess("Access has been revoked!")
                            table.draw();
                        } else {
                            notifyError("Unexpected error!");
                        }
                    });
                }
            });
        }

        function restore(userId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This would enable API access for this user.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, restore!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: "/Users/Restore/" + userId,
                        method: "POST",
                    }).done(function (data) {
                        if (data == true) {
                            notifySucess("Access has been restored!")
                            table.draw();
                        } else {
                            notifyError("Unexpected error!");
                        }
                    });
                }
            });
        }

        function generateActionButtons(full) {
            var accessValue = "";
            if (full.revokeAccess == false) {
                accessValue = '<a class="dropdown-item" onclick="revoke(\'' + full.id + '\')" href="#">Revoke API Access</a>';
            }
            else {
                accessValue = '<a class="dropdown-item" onclick="restore(\'' + full.id + '\')" href="#">Restore API Access</a>';
            }

            let btns =
                '<div class="dropdown">' +
                '<button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' +
                'Actions' +
                '</button>' +
                '<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">' +
                '<a class="dropdown-item" onclick="assignRoles(\'' + full.id + '\')" href="#">Assign Roles</a>' +
                '<a class="dropdown-item" onclick="addSubscription(\'' + full.id + '\')" href="#">Add Subscription</a>' +
                '<a class="dropdown-item" onclick="addOrUpdate(\'' + full.id + '\')" href="#">Edit User</a>' +
                '<a class="dropdown-item" onclick="remove(\'' + full.id + '\')" href="#">Remove User</a>' +
                accessValue +
                '</div>' +
                '</div>';
            return btns;
        }
    </script>

}