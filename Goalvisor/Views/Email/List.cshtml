@{ ViewData["Title"] = "Template List";
                Layout = "~/Views/Shared/_LayoutAdmin.cshtml"; }
<div>
    <div class="float-left">
        <h1>Manage Templates</h1>
    </div>
    <div class="float-right">
        <button class="btn btn-solid-regs" onclick="addOrUpdate(0)">Add New</button>
    </div>
    <div class="clearfix" style="width:100%"></div>
</div>
<div>
    <table id="packagesDT" class="table table-bordered table-hover dataTable" style="width:100%">
        <thead>
            <tr>
                <td style="width:15%">Template Name</td>
                <td style="width:30%">Subject</td>
                <td style="width:52%">Body</td>
                <td style="width:3%">Actions</td>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

@section Scripts{
    <script>
        let table = {};
        $(document).ready(function () {
            table = $('#packagesDT').DataTable({
                "searchable": true,
                "bDestroy": true,
                "ordering": true,
                "serverSide": true,
                responsive: true,
                processing: true,
                sortable: true,
                ajax: {
                    "url": "/Email/PageData",
                    "type": "POST"
                },
                columns: [
                    {
                        name: 'TemplateName',
                        data: 'templateName',
                        title: "Template Name",
                        sortable: true,
                    },
                    {
                        name: 'Subject',
                        data: 'subject',
                        title: "Subject",
                        sortable: true,
                    },
                    {
                        name: 'Body',
                        data: null,
                        title: "Body",
                        sortable: true,
                        render: function (data, type, full, meta) {
                            if (full.body) {
                                if (full.body.length > 100) {
                                    return full.body.substring(0, 250) + "...";
                                }
                                return full.body;
                            } else {
                                return "";
                            }
                        }
                    },
                    {
                        name: 'Action',
                        data: null,
                        targets: -1,
                        sortable: false,
                        title: 'Action',
                        searchable: false,
                        "render": function (data, type, full, meta) {
                            return generateActionButtons(full.id);
                        }
                    }
                ]
            });
            var CreateSuccessMsg = "@(TempData["SuccessMsg"] as string)";

        if (CreateSuccessMsg !== "") {

            notifySucess(CreateSuccessMsg);
        }

        });

        function addOrUpdate(templateId) {
            var modalSelector = GetLoaderModal(80);
            $(modalSelector).modal();

            $(modalSelector + "-content").load("/Email/Edit/" + templateId,
                function (response, status, xhr) {
                }
            );
        }

        function remove(templateId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This will delete the template.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: "/Email/Delete/" + templateId,
                        method: "POST",
                    }).done(function (data) {
                        if (data.success) {
                            notifySucess(data.message);
                            table.draw();
                        } else {
                            notifyError(data.message);
                        }
                    });
                }
            });

        }

        function generateActionButtons(id) {
            let btns =
                '<div class="dropdown">' +
                '<button class="btn btn-primary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">' +
                'Actions' +
                '</button>' +
                '<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">' +
                '<a class="dropdown-item" onclick="addOrUpdate(\'' + id + '\')" href="#">Edit</a>' +
                '<a class="dropdown-item" onclick="remove(\'' + id + '\')" href="#">Remove</a>'
            '</div>' +
                '</div>';
            return btns;
        }
    </script>

}